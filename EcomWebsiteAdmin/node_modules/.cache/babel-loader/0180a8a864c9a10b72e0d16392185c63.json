{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"prefixCls\", \"style\", \"className\", \"children\", \"direction\", \"type\", \"labelPlacement\", \"iconPrefix\", \"status\", \"size\", \"current\", \"progressDot\", \"stepIcon\", \"initial\", \"icons\", \"onChange\", \"items\"];\n\n/* eslint react/no-did-mount-set-state: 0, react/prop-types: 0 */\nimport classNames from 'classnames';\nimport React from 'react';\nimport Step from \"./Step\";\nvar Steps = /*#__PURE__*/function (_React$Component) {\n  _inherits(Steps, _React$Component);\n  var _super = _createSuper(Steps);\n  function Steps() {\n    var _this;\n    _classCallCheck(this, Steps);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"onStepClick\", function (next) {\n      var _this$props = _this.props,\n        onChange = _this$props.onChange,\n        current = _this$props.current;\n      if (onChange && current !== next) {\n        onChange(next);\n      }\n    });\n    return _this;\n  }\n  _createClass(Steps, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n        _this2 = this;\n      var _this$props2 = this.props,\n        prefixCls = _this$props2.prefixCls,\n        _this$props2$style = _this$props2.style,\n        style = _this$props2$style === void 0 ? {} : _this$props2$style,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        direction = _this$props2.direction,\n        type = _this$props2.type,\n        labelPlacement = _this$props2.labelPlacement,\n        iconPrefix = _this$props2.iconPrefix,\n        status = _this$props2.status,\n        size = _this$props2.size,\n        current = _this$props2.current,\n        progressDot = _this$props2.progressDot,\n        stepIcon = _this$props2.stepIcon,\n        initial = _this$props2.initial,\n        icons = _this$props2.icons,\n        onChange = _this$props2.onChange,\n        _this$props2$items = _this$props2.items,\n        items = _this$props2$items === void 0 ? [] : _this$props2$items,\n        restProps = _objectWithoutProperties(_this$props2, _excluded);\n      var isNav = type === 'navigation';\n      var adjustedLabelPlacement = progressDot ? 'vertical' : labelPlacement;\n      var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size), _defineProperty(_classNames, \"\".concat(prefixCls, \"-label-\").concat(adjustedLabelPlacement), direction === 'horizontal'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dot\"), !!progressDot), _defineProperty(_classNames, \"\".concat(prefixCls, \"-navigation\"), isNav), _classNames));\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        className: classString,\n        style: style\n      }, restProps), items.filter(function (item) {\n        return item;\n      }).map(function (item, index) {\n        var mergedItem = _objectSpread({}, item);\n        var stepNumber = initial + index; // fix tail color\n\n        if (status === 'error' && index === current - 1) {\n          mergedItem.className = \"\".concat(prefixCls, \"-next-error\");\n        }\n        if (!mergedItem.status) {\n          if (stepNumber === current) {\n            mergedItem.status = status;\n          } else if (stepNumber < current) {\n            mergedItem.status = 'finish';\n          } else {\n            mergedItem.status = 'wait';\n          }\n        }\n        return /*#__PURE__*/React.createElement(Step, _extends({}, mergedItem, {\n          active: stepNumber === current,\n          stepNumber: stepNumber + 1,\n          stepIndex: stepNumber,\n          key: stepNumber,\n          prefixCls: prefixCls,\n          iconPrefix: iconPrefix,\n          wrapperStyle: style,\n          progressDot: progressDot,\n          stepIcon: stepIcon,\n          icons: icons,\n          onStepClick: onChange && _this2.onStepClick\n        }));\n      }));\n    }\n  }]);\n  return Steps;\n}(React.Component);\n_defineProperty(Steps, \"Step\", Step);\n_defineProperty(Steps, \"defaultProps\", {\n  type: 'default',\n  prefixCls: 'rc-steps',\n  iconPrefix: 'rc',\n  direction: 'horizontal',\n  labelPlacement: 'horizontal',\n  initial: 0,\n  current: 0,\n  status: 'process',\n  size: '',\n  progressDot: false\n});\nexport { Steps as default };","map":null,"metadata":{},"sourceType":"module"}