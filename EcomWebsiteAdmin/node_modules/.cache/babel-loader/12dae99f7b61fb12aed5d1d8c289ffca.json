{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebBanHang\\\\EcomWebsiteAdmin\\\\src\\\\views\\\\app-views\\\\apps\\\\product-deleted\\\\ProductImageModal.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Avatar, Table, Switch, Button, Spin, Popconfirm, Upload, notification } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { changeIsDefault, deleteProductImages, getProductImages, createProductImage // API để tải lên hình ảnh mới\n} from \"services/productImageService\";\nconst ProductImageModal = ({\n  visible,\n  onClose,\n  productId\n}) => {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploading, setUploading] = useState(false);\n\n  // Fetch images when the modal opens\n  useEffect(() => {\n    if (visible && productId) {\n      fetchProductImages();\n    }\n  }, [visible, productId]);\n  const fetchProductImages = async () => {\n    setLoading(true);\n    try {\n      const response = await getProductImages(productId); // Gọi API để lấy hình ảnh\n      setImages(response);\n    } catch (error) {\n      notification.error({\n        message: \"Lỗi\",\n        description: \"Lỗi khi lấy hình ảnh sản phẩm.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleToggleDefault = async imageId => {\n    try {\n      await changeIsDefault(imageId, true); // Gọi API để thay đổi trạng thái\n      notification.success({\n        message: \"Thành công\",\n        description: \"Đã thay đổi trạng thái mặc định cho hình ảnh.\"\n      });\n      fetchProductImages(); // Refresh the image list\n    } catch (error) {\n      notification.error({\n        message: \"Lỗi\",\n        description: \"Lỗi khi thay đổi trạng thái mặc định.\"\n      });\n    }\n  };\n  const handleDeleteImage = async imageId => {\n    try {\n      await deleteProductImages(imageId); // Gọi API để xóa hình ảnh\n      notification.success({\n        message: \"Thành công\",\n        description: \"Đã xóa hình ảnh.\"\n      });\n      fetchProductImages(); // Refresh the image list\n    } catch (error) {\n      notification.error({\n        message: \"Lỗi\",\n        description: \"Lỗi khi xóa hình ảnh.\"\n      });\n    }\n  };\n\n  // Xử lý khi tải lên hình ảnh mới\n  const handleUpload = async file => {\n    setUploading(true);\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    try {\n      await createProductImage(productId, formData); // Gọi API để upload hình ảnh\n      notification.success({\n        message: \"Thành công\",\n        description: \"Tải ảnh lên thành công.\"\n      });\n      fetchProductImages(); // Làm mới danh sách hình ảnh sau khi upload thành công\n    } catch (error) {\n      notification.error({\n        message: \"Lỗi\",\n        description: \"Lỗi khi tải ảnh lên.\"\n      });\n    } finally {\n      setUploading(false);\n    }\n  };\n  const columns = [{\n    title: \"Hình Ảnh\",\n    dataIndex: \"imageUrl\",\n    key: \"imageUrl\",\n    render: text => /*#__PURE__*/React.createElement(Avatar, {\n      src: text,\n      size: 80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    })\n  }, {\n    title: \"Mặc Định\",\n    dataIndex: \"isDefault\",\n    key: \"isDefault\",\n    render: (isDefault, record) => /*#__PURE__*/React.createElement(Switch, {\n      disabled: true,\n      checked: isDefault,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 38\n      }\n    })\n  }];\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"H\\xECnh \\u1EA3nh s\\u1EA3n ph\\u1EA9m\",\n    visible: visible,\n    onCancel: onClose,\n    footer: null,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    dataSource: images,\n    columns: columns,\n    rowKey: \"imageId\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })));\n};\nexport default ProductImageModal;","map":{"version":3,"names":["React","useEffect","useState","Modal","Avatar","Table","Switch","Button","Spin","Popconfirm","Upload","notification","PlusOutlined","changeIsDefault","deleteProductImages","getProductImages","createProductImage","ProductImageModal","visible","onClose","productId","images","setImages","loading","setLoading","uploading","setUploading","fetchProductImages","response","error","message","description","handleToggleDefault","imageId","success","handleDeleteImage","handleUpload","file","formData","FormData","append","columns","title","dataIndex","key","render","text","createElement","src","size","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isDefault","record","disabled","checked","onCancel","footer","width","style","textAlign","margin","Fragment","dataSource","rowKey","pagination"],"sources":["D:/WebBanHang/EcomWebsiteAdmin/src/views/app-views/apps/product-deleted/ProductImageModal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Avatar,\r\n  Table,\r\n  Switch,\r\n  Button,\r\n  Spin,\r\n  Popconfirm,\r\n  Upload,\r\n  notification,\r\n} from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  changeIsDefault,\r\n  deleteProductImages,\r\n  getProductImages,\r\n  createProductImage, // API để tải lên hình ảnh mới\r\n} from \"services/productImageService\";\r\n\r\nconst ProductImageModal = ({ visible, onClose, productId }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  // Fetch images when the modal opens\r\n  useEffect(() => {\r\n    if (visible && productId) {\r\n      fetchProductImages();\r\n    }\r\n  }, [visible, productId]);\r\n\r\n  const fetchProductImages = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getProductImages(productId); // Gọi API để lấy hình ảnh\r\n      setImages(response);\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Lỗi\",\r\n        description: \"Lỗi khi lấy hình ảnh sản phẩm.\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleToggleDefault = async (imageId) => {\r\n    try {\r\n      await changeIsDefault(imageId, true); // Gọi API để thay đổi trạng thái\r\n      notification.success({\r\n        message: \"Thành công\",\r\n        description: \"Đã thay đổi trạng thái mặc định cho hình ảnh.\",\r\n      });\r\n      fetchProductImages(); // Refresh the image list\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Lỗi\",\r\n        description: \"Lỗi khi thay đổi trạng thái mặc định.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = async (imageId) => {\r\n    try {\r\n      await deleteProductImages(imageId); // Gọi API để xóa hình ảnh\r\n      notification.success({\r\n        message: \"Thành công\",\r\n        description: \"Đã xóa hình ảnh.\",\r\n      });\r\n      fetchProductImages(); // Refresh the image list\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Lỗi\",\r\n        description: \"Lỗi khi xóa hình ảnh.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Xử lý khi tải lên hình ảnh mới\r\n  const handleUpload = async (file) => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      await createProductImage(productId, formData); // Gọi API để upload hình ảnh\r\n      notification.success({\r\n        message: \"Thành công\",\r\n        description: \"Tải ảnh lên thành công.\",\r\n      });\r\n      fetchProductImages(); // Làm mới danh sách hình ảnh sau khi upload thành công\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Lỗi\",\r\n        description: \"Lỗi khi tải ảnh lên.\",\r\n      });\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Hình Ảnh\",\r\n      dataIndex: \"imageUrl\",\r\n      key: \"imageUrl\",\r\n      render: (text) => <Avatar src={text} size={80} />,\r\n    },\r\n    {\r\n      title: \"Mặc Định\",\r\n      dataIndex: \"isDefault\",\r\n      key: \"isDefault\",\r\n      render: (isDefault, record) => <Switch disabled checked={isDefault} />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Hình ảnh sản phẩm\"\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      width={800}\r\n    >\r\n      {loading ? (\r\n        <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\r\n          <Spin />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Bảng danh sách hình ảnh */}\r\n          <Table\r\n            dataSource={images}\r\n            columns={columns}\r\n            rowKey=\"imageId\"\r\n            pagination={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProductImageModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}