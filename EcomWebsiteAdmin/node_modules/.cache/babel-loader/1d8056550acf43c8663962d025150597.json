{"ast":null,"code":"import axios from \"axios\";\n\n// Lấy URL của Backend từ file .env\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// Hàm lấy token từ localStorage\nconst getToken = () => {\n  const token = localStorage.getItem(\"auth_token\");\n  return token ? token : null;\n};\n\n// Hàm lấy tất cả hình ảnh của một sản phẩm\nexport const getProductImages = async productId => {\n  try {\n    const response = await axios.get(`${API_URL}/products/${productId}/images`, {\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data.payload; // Giả sử payload chứa danh sách hình ảnh\n  } catch (error) {\n    console.error(\"Error fetching product images\", error);\n    throw error;\n  }\n};\n\n// Hàm tạo hình ảnh sản phẩm mới\nexport const createProductImage = async (productId, formData) => {\n  try {\n    const response = await axios.post(`${API_URL}/products/${productId}/images`, formData, {\n      headers: {\n        Authorization: `Bearer ${getToken()}`,\n        // Thêm token vào header\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data; // Trả về thông tin hình ảnh đã tạo\n  } catch (error) {\n    console.error(\"Error creating product image\", error);\n    throw error;\n  }\n};\n\n// Hàm cập nhật hình ảnh sản phẩm theo ID\nexport const updateProductImage = async (productId, imageId, imageFile) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"image\", imageFile); // Thêm file hình ảnh vào FormData\n\n    const response = await axios.put(`${API_URL}/products/${productId}/images/${imageId}`, formData, {\n      headers: {\n        Authorization: `Bearer ${getToken()}`,\n        // Thêm token vào header\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data; // Trả về thông tin hình ảnh đã cập nhật\n  } catch (error) {\n    console.error(\"Error updating product image\", error);\n    throw error;\n  }\n};\n\n// Hàm xóa tất cả hình ảnh của một sản phẩm\nexport const deleteProductImages = async imageId => {\n  try {\n    const response = await axios.delete(`${API_URL}/products/productId/images/${imageId}`,\n    // Backend API URL for DELETE\n    {\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Add the token for authorization\n      }\n    });\n    return response.data; // Return the server response\n  } catch (error) {\n    console.error(\"Error deleting product image\", error);\n    throw error; // Throw an error if any issues occur\n  }\n};\n\n// Function to change the default status of a product image\nexport const changeIsDefault = async (imageId, isDefault) => {\n  try {\n    const response = await axios.put(`${API_URL}/products/productId/images/${imageId}/default`,\n    // Correct URL with imageId\n    null,\n    // No request body required as we're using @RequestParam for isDefault\n    {\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Add the token for authorization\n      },\n      params: {\n        isDefault: isDefault // Pass isDefault as a query parameter\n      }\n    });\n    return response.data; // Return the confirmation response from the server\n  } catch (error) {\n    console.error(\"Error changing default status of product image\", error);\n    throw error; // Throw an error if any issues occur\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getToken","token","localStorage","getItem","getProductImages","productId","response","get","headers","Authorization","data","payload","error","console","createProductImage","formData","post","updateProductImage","imageId","imageFile","FormData","append","put","deleteProductImages","delete","changeIsDefault","isDefault","params"],"sources":["D:/job/CompoterShopNode/WatchShopAdmin/src/services/productImageService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Lấy URL của Backend từ file .env\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Hàm lấy token từ localStorage\r\nconst getToken = () => {\r\n  const token = localStorage.getItem(\"auth_token\");\r\n  return token ? token : null;\r\n};\r\n\r\n// Hàm lấy tất cả hình ảnh của một sản phẩm\r\nexport const getProductImages = async (productId) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_URL}/products/${productId}/images`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n        },\r\n      }\r\n    );\r\n    return response.data.payload; // Giả sử payload chứa danh sách hình ảnh\r\n  } catch (error) {\r\n    console.error(\"Error fetching product images\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm tạo hình ảnh sản phẩm mới\r\nexport const createProductImage = async (productId, formData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/products/${productId}/images`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data; // Trả về thông tin hình ảnh đã tạo\r\n  } catch (error) {\r\n    console.error(\"Error creating product image\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm cập nhật hình ảnh sản phẩm theo ID\r\nexport const updateProductImage = async (productId, imageId, imageFile) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", imageFile); // Thêm file hình ảnh vào FormData\r\n\r\n    const response = await axios.put(\r\n      `${API_URL}/products/${productId}/images/${imageId}`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data; // Trả về thông tin hình ảnh đã cập nhật\r\n  } catch (error) {\r\n    console.error(\"Error updating product image\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm xóa tất cả hình ảnh của một sản phẩm\r\nexport const deleteProductImages = async (imageId) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${API_URL}/products/productId/images/${imageId}`, // Backend API URL for DELETE\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getToken()}`, // Add the token for authorization\r\n        },\r\n      }\r\n    );\r\n    return response.data; // Return the server response\r\n  } catch (error) {\r\n    console.error(\"Error deleting product image\", error);\r\n    throw error; // Throw an error if any issues occur\r\n  }\r\n};\r\n\r\n// Function to change the default status of a product image\r\nexport const changeIsDefault = async (imageId, isDefault) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/products/productId/images/${imageId}/default`, // Correct URL with imageId\r\n      null, // No request body required as we're using @RequestParam for isDefault\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getToken()}`, // Add the token for authorization\r\n        },\r\n        params: {\r\n          isDefault: isDefault, // Pass isDefault as a query parameter\r\n        },\r\n      }\r\n    );\r\n    return response.data; // Return the confirmation response from the server\r\n  } catch (error) {\r\n    console.error(\"Error changing default status of product image\", error);\r\n    throw error; // Throw an error if any issues occur\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}