{"ast":null,"code":"import axios from \"axios\";\n\n// Lấy URL của Backend từ file .env\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// Hàm lấy token từ localStorage\nconst getToken = () => {\n  const token = localStorage.getItem(\"auth_token\");\n  return token ? token : null;\n};\nconst getUserId = () => {\n  const user = localStorage.getItem(\"user\");\n  return user ? JSON.parse(user).userId : null;\n};\n\n// Hàm lấy tất cả đơn hàng với phân trang\nexport const getAllOrders = async (page = 1, limit = 10, code, status, method) => {\n  try {\n    const params = {\n      page,\n      limit\n    };\n\n    // Kiểm tra xem các tham số lọc có tồn tại không, nếu có thì thêm vào params\n    if (code) {\n      params.code = code;\n    }\n    if (status) {\n      params.status = status;\n    }\n    if (method) {\n      params.method = method;\n    }\n    const response = await axios.get(`${API_URL}/orders/all`, {\n      params,\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data.payload;\n  } catch (error) {\n    console.error(\"Error fetching orders\", error);\n    throw error;\n  }\n};\n\n// Hàm cập nhật trạng thái đơn hàng\nexport const updateOrderStatus = async (orderId, status) => {\n  try {\n    const response = await axios.put(`${API_URL}/orders/${orderId}/status`, null, {\n      params: {\n        status\n      },\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating order status\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getToken","token","localStorage","getItem","getUserId","user","JSON","parse","userId","getAllOrders","page","limit","code","status","method","params","response","get","headers","Authorization","data","payload","error","console","updateOrderStatus","orderId","put"],"sources":["D:/job/ComputerShopNode-Plus/ComputerShopAdmin/src/services/orderService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Lấy URL của Backend từ file .env\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Hàm lấy token từ localStorage\r\nconst getToken = () => {\r\n  const token = localStorage.getItem(\"auth_token\");\r\n  return token ? token : null;\r\n};\r\n\r\nconst getUserId = () => {\r\n  const user = localStorage.getItem(\"user\");\r\n  return user ? JSON.parse(user).userId : null;\r\n};\r\n\r\n// Hàm lấy tất cả đơn hàng với phân trang\r\nexport const getAllOrders = async (\r\n  page = 1,\r\n  limit = 10,\r\n  code,\r\n  status,\r\n  method\r\n) => {\r\n  try {\r\n    const params = { page, limit };\r\n\r\n    // Kiểm tra xem các tham số lọc có tồn tại không, nếu có thì thêm vào params\r\n    if (code) {\r\n      params.code = code;\r\n    }\r\n    if (status) {\r\n      params.status = status;\r\n    }\r\n    if (method) {\r\n      params.method = method;\r\n    }\r\n\r\n    const response = await axios.get(`${API_URL}/orders/all`, {\r\n      params,\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n      },\r\n    });\r\n    return response.data.payload;\r\n  } catch (error) {\r\n    console.error(\"Error fetching orders\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm cập nhật trạng thái đơn hàng\r\nexport const updateOrderStatus = async (orderId, status) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/orders/${orderId}/status`,\r\n      null,\r\n      {\r\n        params: { status },\r\n        headers: {\r\n          Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating order status\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAE7C;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,OAAOF,KAAK,GAAGA,KAAK,GAAG,IAAI;AAC7B,CAAC;AAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,IAAI,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOE,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAACG,MAAM,GAAG,IAAI;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAC1BC,IAAI,GAAG,CAAC,EACRC,KAAK,GAAG,EAAE,EACVC,IAAI,EACJC,MAAM,EACNC,MAAM,KACH;EACH,IAAI;IACF,MAAMC,MAAM,GAAG;MAAEL,IAAI;MAAEC;IAAM,CAAC;;IAE9B;IACA,IAAIC,IAAI,EAAE;MACRG,MAAM,CAACH,IAAI,GAAGA,IAAI;IACpB;IACA,IAAIC,MAAM,EAAE;MACVE,MAAM,CAACF,MAAM,GAAGA,MAAM;IACxB;IACA,IAAIC,MAAM,EAAE;MACVC,MAAM,CAACD,MAAM,GAAGA,MAAM;IACxB;IAEA,MAAME,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,aAAa,EAAE;MACxDmB,MAAM;MACNG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUnB,QAAQ,CAAC,CAAC,EAAE,CAAE;MACzC;IACF,CAAC,CAAC;IACF,OAAOgB,QAAQ,CAACI,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAAA,CAAOC,OAAO,EAAEZ,MAAM,KAAK;EAC1D,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMrB,KAAK,CAAC+B,GAAG,CAC9B,GAAG9B,OAAO,WAAW6B,OAAO,SAAS,EACrC,IAAI,EACJ;MACEV,MAAM,EAAE;QAAEF;MAAO,CAAC;MAClBK,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUnB,QAAQ,CAAC,CAAC,EAAE,CAAE;MACzC;IACF,CACF,CAAC;IACD,OAAOgB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}