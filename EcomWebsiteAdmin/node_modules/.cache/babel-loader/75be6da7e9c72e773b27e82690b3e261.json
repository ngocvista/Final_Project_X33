{"ast":null,"code":"import { BestAvailableLocale } from './BestAvailableLocale';\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-bestfitmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n  var minimizedAvailableLocaleMap = {};\n  var availableLocaleMap = {};\n  var canonicalizedLocaleMap = {};\n  var minimizedAvailableLocales = new Set();\n  availableLocales.forEach(function (locale) {\n    var minimizedLocale = new Intl.Locale(locale).minimize().toString();\n    var canonicalizedLocale = Intl.getCanonicalLocales(locale)[0] || locale;\n    minimizedAvailableLocaleMap[minimizedLocale] = locale;\n    availableLocaleMap[locale] = locale;\n    canonicalizedLocaleMap[canonicalizedLocale] = locale;\n    minimizedAvailableLocales.add(minimizedLocale);\n    minimizedAvailableLocales.add(locale);\n    minimizedAvailableLocales.add(canonicalizedLocale);\n  });\n  var foundLocale;\n  for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n    var l = requestedLocales_1[_i];\n    if (foundLocale) {\n      break;\n    }\n    var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n    if (availableLocales.has(noExtensionLocale)) {\n      foundLocale = noExtensionLocale;\n      break;\n    }\n    if (minimizedAvailableLocales.has(noExtensionLocale)) {\n      foundLocale = noExtensionLocale;\n      break;\n    }\n    var locale = new Intl.Locale(noExtensionLocale);\n    var maximizedRequestedLocale = locale.maximize().toString();\n    var minimizedRequestedLocale = locale.minimize().toString();\n    // Check minimized locale\n    if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\n      foundLocale = minimizedRequestedLocale;\n      break;\n    }\n    // Lookup algo on maximized locale\n    foundLocale = BestAvailableLocale(minimizedAvailableLocales, maximizedRequestedLocale);\n  }\n  if (!foundLocale) {\n    return {\n      locale: getDefaultLocale()\n    };\n  }\n  return {\n    locale: availableLocaleMap[foundLocale] || canonicalizedLocaleMap[foundLocale] || minimizedAvailableLocaleMap[foundLocale] || foundLocale\n  };\n}","map":null,"metadata":{},"sourceType":"module"}