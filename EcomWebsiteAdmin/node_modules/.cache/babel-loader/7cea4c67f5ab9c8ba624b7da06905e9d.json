{"ast":null,"code":"import axios from \"axios\";\n\n// Lấy URL của Backend từ file .env\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// Hàm lấy token từ localStorage\nconst getToken = () => {\n  const token = localStorage.getItem(\"auth_token\");\n  return token ? token : null;\n};\n\n// Hàm lấy tất cả người dùng với phân trang, tìm kiếm và sắp xếp\nexport const getAllUsers = async (page = 1, limit = 1000, keyword = \"\") => {\n  try {\n    const response = await axios.get(`${API_URL}/users`, {\n      params: {\n        keyword,\n        page,\n        limit\n      },\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data.payload;\n  } catch (error) {\n    console.error(\"Error fetching users\", error);\n    throw error;\n  }\n};\n\n// Hàm lấy người dùng theo ID\nexport const getUserById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/users/${id}`, {\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user by ID\", error);\n    throw error;\n  }\n};\n\n// Hàm tạo người dùng mới\nexport const createUser = async (userData, imageFile) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"username\", userData.username);\n    formData.append(\"password\", userData.password);\n    formData.append(\"email\", userData.email);\n    formData.append(\"phoneNumber\", userData.phoneNumber);\n    formData.append(\"fullName\", userData.fullName);\n    formData.append(\"address\", userData.address);\n    formData.append(\"role\", userData.role);\n    if (imageFile) {\n      formData.append(\"avatar\", imageFile); // Upload ảnh đại diện (avatar)\n    }\n    const response = await axios.post(`${API_URL}/users`, formData, {\n      headers: {\n        Authorization: `Bearer ${getToken()}`,\n        // Thêm token vào header\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating user\", error);\n    throw error;\n  }\n};\n\n// Hàm cập nhật người dùng theo ID\nexport const updateUser = async (id, userData, imageFile) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"username\", userData.username);\n    formData.append(\"email\", userData.email);\n    formData.append(\"phoneNumber\", userData.phoneNumber);\n    formData.append(\"fullName\", userData.fullName);\n    formData.append(\"address\", userData.address);\n    formData.append(\"role\", userData.role);\n    if (imageFile) {\n      formData.append(\"avatar\", imageFile); // Upload ảnh đại diện (avatar)\n    }\n    const response = await axios.put(`${API_URL}/users/${id}`, formData, {\n      headers: {\n        Authorization: `Bearer ${getToken()}`,\n        // Thêm token vào header\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating user\", error);\n    throw error;\n  }\n};\n\n// Hàm xóa người dùng theo ID\nexport const deleteUser = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/users/${id}`, {\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting user\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getToken","token","localStorage","getItem","getAllUsers","page","limit","keyword","response","get","params","headers","Authorization","data","payload","error","console","getUserById","id","createUser","userData","imageFile","formData","FormData","append","username","password","email","phoneNumber","fullName","address","role","post","updateUser","put","deleteUser","delete"],"sources":["D:/job/WatchShop/WatchShopAdmin/src/services/userService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Lấy URL của Backend từ file .env\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Hàm lấy token từ localStorage\r\nconst getToken = () => {\r\n  const token = localStorage.getItem(\"auth_token\");\r\n  return token ? token : null;\r\n};\r\n\r\n// Hàm lấy tất cả người dùng với phân trang, tìm kiếm và sắp xếp\r\nexport const getAllUsers = async (page = 1, limit = 1000, keyword = \"\") => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/users`, {\r\n      params: {\r\n        keyword,\r\n        page,\r\n        limit,\r\n      },\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n      },\r\n    });\r\n    return response.data.payload;\r\n  } catch (error) {\r\n    console.error(\"Error fetching users\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm lấy người dùng theo ID\r\nexport const getUserById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/users/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching user by ID\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm tạo người dùng mới\r\nexport const createUser = async (userData, imageFile) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"username\", userData.username);\r\n    formData.append(\"password\", userData.password);\r\n    formData.append(\"email\", userData.email);\r\n    formData.append(\"phoneNumber\", userData.phoneNumber);\r\n    formData.append(\"fullName\", userData.fullName);\r\n    formData.append(\"address\", userData.address);\r\n    formData.append(\"role\", userData.role);\r\n\r\n    if (imageFile) {\r\n      formData.append(\"avatar\", imageFile); // Upload ảnh đại diện (avatar)\r\n    }\r\n\r\n    const response = await axios.post(`${API_URL}/users`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating user\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm cập nhật người dùng theo ID\r\nexport const updateUser = async (id, userData, imageFile) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"username\", userData.username);\r\n    formData.append(\"email\", userData.email);\r\n    formData.append(\"phoneNumber\", userData.phoneNumber);\r\n    formData.append(\"fullName\", userData.fullName);\r\n    formData.append(\"address\", userData.address);\r\n    formData.append(\"role\", userData.role);\r\n\r\n    if (imageFile) {\r\n      formData.append(\"avatar\", imageFile); // Upload ảnh đại diện (avatar)\r\n    }\r\n\r\n    const response = await axios.put(`${API_URL}/users/${id}`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating user\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm xóa người dùng theo ID\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/users/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting user\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}