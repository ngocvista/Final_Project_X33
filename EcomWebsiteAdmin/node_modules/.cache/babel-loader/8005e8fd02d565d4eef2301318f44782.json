{"ast":null,"code":"var _jsxFileName = \"D:\\\\EcomWebsiteProject\\\\EcomWebsiteAdmin\\\\src\\\\views\\\\app-views\\\\apps\\\\chat\\\\Conversation.js\";\nimport React from \"react\";\nimport { Avatar, Divider, Input, Form, Button, Menu } from \"antd\";\nimport { SendOutlined, PaperClipOutlined, SmileOutlined, UserOutlined, DeleteOutlined, AudioMutedOutlined } from \"@ant-design/icons\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport axios from \"axios\";\nimport Flex from \"components/shared-components/Flex\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nconst menu = () => /*#__PURE__*/React.createElement(Menu, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(UserOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }\n}, \"User Info\")), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(AudioMutedOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, \"Mute Chat\")), /*#__PURE__*/React.createElement(Menu.Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(DeleteOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, \"Delete Chat\")));\nexport class Conversation extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = React.createRef();\n    this.chatBodyRef = React.createRef();\n    this.stompClient = null;\n    this.state = {\n      info: {},\n      msgList: [],\n      newMessage: \"\"\n    };\n    // Kết nối WebSocket\n    // Kết nối WebSocket\n    this.connectWebSocket = () => {\n      const socket = new SockJS(\"http://localhost:8080/ws\");\n      this.stompClient = Stomp.over(socket);\n      this.stompClient.connect({}, frame => {\n        console.log(\"Connected: \" + frame); // In ra frame để kiểm tra kết nối\n\n        this.stompClient.subscribe(\"/topic/chatroom\", messageOutput => {\n          const message = JSON.parse(messageOutput.body);\n          console.log(\"Received message from WebSocket: \", message); // Kiểm tra tin nhắn nhận từ WebSocket\n\n          this.setState({\n            msgList: [...this.state.msgList, message]\n          });\n        });\n      }, error => {\n        console.error(\"WebSocket connection error: \", error);\n      });\n    };\n    // Gọi API để lấy danh sách tin nhắn của phòng chat\n    this.getConversation = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/messages/chatroom/${this.getChatRoomId()}`);\n        this.setState({\n          msgList: response.data\n        });\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    // Hiển thị nội dung tin nhắn và kiểu tin nhắn (text, file, image)\n    this.getMsgType = msg => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }\n      }, msg.content);\n    };\n    // Cuộn xuống cuối khi có tin nhắn mới\n    this.scrollToBottom = () => {\n      this.chatBodyRef.current.scrollToBottom();\n    };\n    this.onSend = async values => {\n      if (values.newMsg && this.stompClient) {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        if (!user || !user.userId) {\n          console.error(\"User or userId is missing from localStorage\");\n          return;\n        }\n        const newMsgData = {\n          content: values.newMsg,\n          sender: {\n            id: user.userId\n          },\n          timestamp: new Date().toISOString()\n        };\n        const newMsgDataSocket = {\n          content: values.newMsg,\n          sender: {\n            id: user.userId,\n            // Gán userId lấy từ localStorage\n            username: user.username,\n            // Gán username nếu cần\n            fullName: user.fullName,\n            // Gán fullName\n            avatar: user.avatar,\n            // Gán avatar nếu cần\n            userId: user.userId\n          },\n          timestamp: new Date().toISOString()\n        };\n\n        // Gửi tin nhắn qua WebSocket\n        this.stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(newMsgDataSocket));\n\n        // Gửi tin nhắn qua API để lưu vào cơ sở dữ liệu\n        try {\n          axios.post(`http://localhost:8080/api/messages/chatroom/${this.getChatRoomId()}?userId=${user.userId}`, newMsgData).then(response => {\n            console.log(\"Message sent successfully\", response.data);\n          }).catch(error => {\n            console.error(\"Error sending message\", error);\n          });\n\n          // this.setState({\n          //   msgList: [...this.state.msgList, response.data],\n          // });\n\n          this.formRef.current.setFieldsValue({\n            newMsg: \"\"\n          });\n        } catch (error) {\n          console.error(\"Error sending message via API:\", error);\n        }\n      }\n    };\n    this.emptyClick = e => {\n      e.preventDefault();\n    };\n    this.chatContentHeader = name => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EllipsisDropdown, {\n      menu: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    })));\n    this.chatContentBody = messages => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Scrollbars, {\n      ref: this.chatBodyRef,\n      autoHide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, messages.map((msg, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: `msg-${i}`,\n      className: `msg ${msg.sender.userId === this.getUserId() ? \"msg-sent\" : \"msg-recipient\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: msg.sender.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bubble\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bubble-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, msg.sender.fullName, \" - \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, new Date(msg.timestamp).toLocaleTimeString())), this.getMsgType(msg)))))));\n    this.chatContentFooter = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      name: \"msgInput\",\n      ref: this.formRef,\n      onFinish: this.onSend,\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"newMsg\",\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      autoComplete: \"off\",\n      placeholder: \"Type a message...\",\n      suffix: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/#\",\n        className: \"text-dark font-size-lg mr-3\",\n        onClick: this.emptyClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SmileOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/#\",\n        className: \"text-dark font-size-lg mr-3\",\n        onClick: this.emptyClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PaperClipOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        shape: \"circle\",\n        type: \"primary\",\n        size: \"small\",\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SendOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 19\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }))));\n  }\n  componentDidMount() {\n    this.getConversation(this.getUserId());\n    this.connectWebSocket();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.getConversation(this.getUserId());\n    }\n    this.scrollToBottom();\n  }\n  getUserId() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return (user === null || user === void 0 ? void 0 : user.userId) || null;\n  }\n  getChatRoomId() {\n    const {\n      id\n    } = this.props.match.params;\n    return parseInt(parseInt(id));\n  }\n  render() {\n    const {\n      msgList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }\n    }, this.chatContentBody(msgList), this.chatContentFooter());\n  }\n}\nexport default Conversation;","map":{"version":3,"names":["React","Avatar","Divider","Input","Form","Button","Menu","SendOutlined","PaperClipOutlined","SmileOutlined","UserOutlined","DeleteOutlined","AudioMutedOutlined","Scrollbars","SockJS","Stomp","axios","Flex","EllipsisDropdown","menu","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","key","Conversation","Component","constructor","args","formRef","createRef","chatBodyRef","stompClient","state","info","msgList","newMessage","connectWebSocket","socket","over","connect","frame","console","log","subscribe","messageOutput","message","JSON","parse","body","setState","error","getConversation","response","get","getChatRoomId","data","getMsgType","msg","content","scrollToBottom","current","onSend","values","newMsg","user","localStorage","getItem","userId","newMsgData","sender","id","timestamp","Date","toISOString","newMsgDataSocket","username","fullName","avatar","send","stringify","post","then","catch","setFieldsValue","emptyClick","e","preventDefault","chatContentHeader","name","className","chatContentBody","messages","ref","autoHide","map","i","getUserId","src","toLocaleTimeString","chatContentFooter","onFinish","autoComplete","placeholder","suffix","href","onClick","shape","type","size","htmlType","componentDidMount","componentDidUpdate","prevProps","props","location","pathname","match","params","parseInt","render"],"sources":["D:/EcomWebsiteProject/EcomWebsiteAdmin/src/views/app-views/apps/chat/Conversation.js"],"sourcesContent":["import React from \"react\";\r\nimport { Avatar, Divider, Input, Form, Button, Menu } from \"antd\";\r\nimport {\r\n  SendOutlined,\r\n  PaperClipOutlined,\r\n  SmileOutlined,\r\n  UserOutlined,\r\n  DeleteOutlined,\r\n  AudioMutedOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\nimport axios from \"axios\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\r\n\r\nconst menu = () => (\r\n  <Menu>\r\n    <Menu.Item key=\"0\">\r\n      <UserOutlined />\r\n      <span>User Info</span>\r\n    </Menu.Item>\r\n    <Menu.Item key=\"1\">\r\n      <AudioMutedOutlined />\r\n      <span>Mute Chat</span>\r\n    </Menu.Item>\r\n    <Menu.Divider />\r\n    <Menu.Item key=\"3\">\r\n      <DeleteOutlined />\r\n      <span>Delete Chat</span>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nexport class Conversation extends React.Component {\r\n  formRef = React.createRef();\r\n  chatBodyRef = React.createRef();\r\n  stompClient = null;\r\n\r\n  state = {\r\n    info: {},\r\n    msgList: [],\r\n    newMessage: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getConversation(this.getUserId());\r\n    this.connectWebSocket();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.getConversation(this.getUserId());\r\n    }\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  // Kết nối WebSocket\r\n  // Kết nối WebSocket\r\n  connectWebSocket = () => {\r\n    const socket = new SockJS(\"http://localhost:8080/ws\");\r\n    this.stompClient = Stomp.over(socket);\r\n\r\n    this.stompClient.connect(\r\n      {},\r\n      (frame) => {\r\n        console.log(\"Connected: \" + frame); // In ra frame để kiểm tra kết nối\r\n\r\n        this.stompClient.subscribe(\"/topic/chatroom\", (messageOutput) => {\r\n          const message = JSON.parse(messageOutput.body);\r\n          console.log(\"Received message from WebSocket: \", message); // Kiểm tra tin nhắn nhận từ WebSocket\r\n\r\n          this.setState({\r\n            msgList: [...this.state.msgList, message],\r\n          });\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error(\"WebSocket connection error: \", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  getUserId() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    return user?.userId || null;\r\n  }\r\n  getChatRoomId() {\r\n    const { id } = this.props.match.params;\r\n    return parseInt(parseInt(id));\r\n  }\r\n  // Gọi API để lấy danh sách tin nhắn của phòng chat\r\n  getConversation = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8080/api/messages/chatroom/${this.getChatRoomId()}`\r\n      );\r\n      this.setState({\r\n        msgList: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  };\r\n\r\n  // Hiển thị nội dung tin nhắn và kiểu tin nhắn (text, file, image)\r\n  getMsgType = (msg) => {\r\n    return <span>{msg.content}</span>;\r\n  };\r\n\r\n  // Cuộn xuống cuối khi có tin nhắn mới\r\n  scrollToBottom = () => {\r\n    this.chatBodyRef.current.scrollToBottom();\r\n  };\r\n\r\n  onSend = async (values) => {\r\n    if (values.newMsg && this.stompClient) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n      if (!user || !user.userId) {\r\n        console.error(\"User or userId is missing from localStorage\");\r\n        return;\r\n      }\r\n\r\n      const newMsgData = {\r\n        content: values.newMsg,\r\n        sender: { id: user.userId },\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      const newMsgDataSocket = {\r\n        content: values.newMsg,\r\n        sender: {\r\n          id: user.userId, // Gán userId lấy từ localStorage\r\n          username: user.username, // Gán username nếu cần\r\n          fullName: user.fullName, // Gán fullName\r\n          avatar: user.avatar, // Gán avatar nếu cần\r\n          userId: user.userId,\r\n        },\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      // Gửi tin nhắn qua WebSocket\r\n      this.stompClient.send(\r\n        \"/app/chat.sendMessage\",\r\n        {},\r\n        JSON.stringify(newMsgDataSocket)\r\n      );\r\n\r\n      // Gửi tin nhắn qua API để lưu vào cơ sở dữ liệu\r\n      try {\r\n        axios\r\n          .post(\r\n            `http://localhost:8080/api/messages/chatroom/${this.getChatRoomId()}?userId=${\r\n              user.userId\r\n            }`,\r\n            newMsgData\r\n          )\r\n          .then((response) => {\r\n            console.log(\"Message sent successfully\", response.data);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error sending message\", error);\r\n          });\r\n\r\n        // this.setState({\r\n        //   msgList: [...this.state.msgList, response.data],\r\n        // });\r\n\r\n        this.formRef.current.setFieldsValue({\r\n          newMsg: \"\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error sending message via API:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  emptyClick = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  chatContentHeader = (name) => (\r\n    <div className=\"chat-content-header\">\r\n      <h4 className=\"mb-0\">{name}</h4>\r\n      <div>\r\n        <EllipsisDropdown menu={menu} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  chatContentBody = (messages) => (\r\n    <div className=\"chat-content-body\">\r\n      <Scrollbars ref={this.chatBodyRef} autoHide>\r\n        {messages.map((msg, i) => (\r\n          <div\r\n            key={`msg-${i}`}\r\n            className={`msg ${\r\n              msg.sender.userId === this.getUserId()\r\n                ? \"msg-sent\"\r\n                : \"msg-recipient\"\r\n            }`}\r\n          >\r\n            <div className=\"mr-2\">\r\n              <Avatar src={msg.sender.avatar} />\r\n            </div>\r\n            <div className=\"bubble\">\r\n              <div className=\"bubble-wrapper\">\r\n                <div className=\"message-header\">\r\n                  <strong>{msg.sender.fullName} - </strong>\r\n                  <span className=\"timestamp\">\r\n                    {new Date(msg.timestamp).toLocaleTimeString()}\r\n                  </span>\r\n                </div>\r\n                {this.getMsgType(msg)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n\r\n  chatContentFooter = () => (\r\n    <div className=\"chat-content-footer\">\r\n      <Form\r\n        name=\"msgInput\"\r\n        ref={this.formRef}\r\n        onFinish={this.onSend}\r\n        className=\"w-100\"\r\n      >\r\n        <Form.Item name=\"newMsg\" className=\"mb-0\">\r\n          <Input\r\n            autoComplete=\"off\"\r\n            placeholder=\"Type a message...\"\r\n            suffix={\r\n              <div className=\"d-flex align-items-center\">\r\n                <a\r\n                  href=\"/#\"\r\n                  className=\"text-dark font-size-lg mr-3\"\r\n                  onClick={this.emptyClick}\r\n                >\r\n                  <SmileOutlined />\r\n                </a>\r\n                <a\r\n                  href=\"/#\"\r\n                  className=\"text-dark font-size-lg mr-3\"\r\n                  onClick={this.emptyClick}\r\n                >\r\n                  <PaperClipOutlined />\r\n                </a>\r\n                <Button\r\n                  shape=\"circle\"\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  <SendOutlined />\r\n                </Button>\r\n              </div>\r\n            }\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { msgList } = this.state;\r\n    return (\r\n      <div className=\"chat-content\">\r\n        {this.chatContentBody(msgList)}\r\n        {this.chatContentFooter()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Conversation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}