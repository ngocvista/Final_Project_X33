{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebBanHang\\\\ComputerShopAdmin\\\\src\\\\views\\\\app-views\\\\apps\\\\product\\\\index.js\";\nimport { Table, Button, Popconfirm, Pagination, Input, message, Spin, Card, Select, Avatar, Modal, List } from \"antd\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { getAllProducts, deleteProduct } from \"services/productService\";\nimport { getAllCategories } from \"services/categoryService\";\nimport { getAllBrands } from \"services/brandService\";\nimport { debounce } from \"lodash\";\nimport { formatCurrency } from \"utils/formatCurrency\";\nimport CreateProductModal from \"./CreateProductModal\";\nimport EditProductModal from \"./EditProductModal\";\nimport ProductImageModal from \"./ProductImageModal\"; // Import modal\nimport { getProductImages } from \"services/productImageService\"; // Import service\nimport { getAllUsers } from \"services/userService\";\nconst {\n  Option\n} = Select;\nexport default function ProductManagement() {\n  const [products, setProducts] = useState([]); // State để lưu trữ sản phẩm\n  const [categories, setCategories] = useState([]); // State để lưu trữ danh mục cho bộ lọc\n  const [brands, setBrands] = useState([]); // State để lưu trữ thương hiệu cho bộ lọc\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1); // Trang hiện tại\n  const [totalPages, setTotalPages] = useState(1); // Tổng số trang\n  const [loading, setLoading] = useState(false); // Trạng thái loading\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Từ khóa tìm kiếm\n  const [selectedCategory, setSelectedCategory] = useState(null); // Danh mục đã chọn để lọc\n  const [selectedUser, setSelectedUser] = useState(null); // Danh mục đã chọn để lọc\n  const [selectedBrand, setSelectedBrand] = useState(null); // Thương hiệu đã chọn để lọc\n  const [editProductData, setEditProductData] = useState(null); // Dữ liệu để chỉnh sửa sản phẩm\n  const [isCreateOpen, setIsCreateOpen] = useState(false); // Trạng thái của modal tạo sản phẩm\n  const [isEditOpen, setIsEditOpen] = useState(false); // Trạng thái của modal chỉnh sửa sản phẩm\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false); // Trạng thái của modal hình ảnh\n  const [productId, setProductId] = useState(\"\");\n  const limit = 5; // Số lượng sản phẩm trên mỗi trang\n\n  // Hàm lấy sản phẩm\n  const fetchProducts = useCallback(async (search = searchTerm, page = currentPage, categoryId = selectedCategory, brandId = selectedBrand, sellerId = selectedUser) => {\n    setLoading(true);\n    try {\n      const data = await getAllProducts(search, categoryId, brandId, sellerId, page, limit); // Gọi API để lấy sản phẩm\n      setProducts(data.content);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      message.error(\"Lỗi khi lấy sản phẩm.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [currentPage, limit, selectedCategory, selectedBrand]);\n\n  // Hàm lấy danh mục và thương hiệu\n  const fetchCategoriesAndBrands = async () => {\n    const [categoryData, brandData, userData] = await Promise.all([getAllCategories(), getAllBrands(), getAllUsers(1, 1000, \"\", \"SELLER,ADMIN\", true)]);\n    setCategories(categoryData.content);\n    setBrands(brandData.content);\n    setUsers(userData.content);\n  };\n\n  // Hàm debounce tìm kiếm\n  const debouncedFetchProducts = useCallback(debounce(value => {\n    setCurrentPage(1);\n    fetchProducts(value, 1);\n  }, 800), [fetchProducts]);\n\n  // Lấy sản phẩm khi trang hoặc từ khóa tìm kiếm thay đổi\n  useEffect(() => {\n    fetchProducts(searchTerm, currentPage);\n  }, [fetchProducts, currentPage]);\n\n  // Lấy danh mục và thương hiệu khi component mount\n  useEffect(() => {\n    fetchCategoriesAndBrands(); // Gọi để lấy danh mục và thương hiệu\n  }, []);\n\n  // Xử lý thay đổi danh mục\n  const handleCategoryChange = value => {\n    setSelectedCategory(value);\n    setCurrentPage(1);\n    fetchProducts(searchTerm, 1, value, selectedBrand, selectedUser);\n  };\n\n  // Xử lý thay đổi thương hiệu\n  const handleBrandChange = value => {\n    setSelectedBrand(value);\n    setCurrentPage(1);\n    fetchProducts(searchTerm, 1, selectedCategory, value, selectedUser);\n  };\n  const handleUserChange = value => {\n    setSelectedUser(value);\n    setCurrentPage(1);\n    fetchProducts(searchTerm, 1, selectedCategory, selectedBrand, value);\n  };\n  // Hàm xóa sản phẩm\n  const confirmDeleteProduct = async productId => {\n    try {\n      await deleteProduct(productId); // Gọi API để xóa sản phẩm\n      message.success(\"Đã xóa sản phẩm.\");\n      fetchProducts(); // Lấy lại sản phẩm sau khi xóa\n    } catch (error) {\n      message.error(\"Lỗi khi xóa sản phẩm.\");\n    }\n  };\n\n  // Xử lý thay đổi trang\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  // Xử lý khi click vào nút \"Sửa\"\n  const handleEditClick = record => {\n    console.log(record);\n    setEditProductData(record); // Lưu dữ liệu sản phẩm để chỉnh sửa\n    setIsEditOpen(true); // Mở modal chỉnh sửa\n  };\n\n  // Xử lý khi click vào nút \"Sửa Ảnh\"\n  // Xử lý khi click vào nút \"Sửa Ảnh\"\n  const handleEditImages = async productId => {\n    try {\n      setProductId(productId);\n      setIsImageModalOpen(true); // Mở modal hình ảnh\n    } catch (error) {\n      message.error(\"Lỗi khi lấy hình ảnh sản phẩm.\");\n    }\n  };\n\n  // Cấu hình các cột cho bảng Ant Design\n  const columns = [{\n    title: \"Tên Sản Phẩm\",\n    dataIndex: \"productName\",\n    key: \"productName\"\n  }, {\n    title: \"Giá\",\n    dataIndex: \"price\",\n    key: \"price\",\n    render: text => `${formatCurrency(text)}`\n  }, {\n    title: \"Danh Mục\",\n    dataIndex: [\"category\", \"categoryName\"],\n    key: \"categoryName\"\n  }, {\n    title: \"Thương Hiệu\",\n    dataIndex: [\"brand\", \"brandName\"],\n    key: \"brandName\"\n  }, {\n    title: \"Người bán | Người tạo\",\n    dataIndex: [\"sellerId\"],\n    key: \"sellerId\",\n    render: sellerId => sellerId ? `${sellerId.fullName} - ${sellerId.role}` : \"Không có\"\n  }, {\n    title: \"Hình Ảnh\",\n    dataIndex: \"images\",\n    key: \"images\",\n    render: images => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, \" \", images.slice(0, 3).map(image => /*#__PURE__*/React.createElement(Avatar, {\n      key: image._id,\n      src: image.imageUrl,\n      size: 40,\n      style: {\n        marginRight: 5\n      } // Tạo khoảng cách giữa các hình ảnh\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    })), images.length > 3 && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, \"+\", images.length - 3))\n  }, {\n    title: \"Số Lượng\",\n    dataIndex: \"stock\",\n    key: \"stock\"\n  }, {\n    title: \"Hành Động\",\n    key: \"actions\",\n    align: \"center\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: () => handleEditClick(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, \"S\\u1EEDa\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"default\",\n      size: \"small\",\n      onClick: () => handleEditImages(record._id) // Sửa Ảnh\n      ,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, \"S\\u1EEDa \\u1EA2nh\"), /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a s\\u1EA3n ph\\u1EA9m n\\xE0y?\",\n      onConfirm: () => confirmDeleteProduct(record._id),\n      okText: \"C\\xF3\",\n      cancelText: \"Kh\\xF4ng\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"X\\xF3a\")))\n  }];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"T\\xECm ki\\u1EBFm s\\u1EA3n ph\\u1EA9m...\",\n    allowClear: true,\n    value: searchTerm,\n    onChange: e => {\n      setSearchTerm(e.target.value); // Cập nhật từ khóa tìm kiếm\n      debouncedFetchProducts(e.target.value); // Gọi hàm tìm kiếm\n    },\n    style: {\n      width: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Ch\\u1ECDn Danh M\\u1EE5c\",\n    onChange: handleCategoryChange,\n    style: {\n      width: \"15%\",\n      marginLeft: \"10px\"\n    },\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(Option, {\n    key: category._id,\n    value: category._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, category.categoryName))), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Ch\\u1ECDn Th\\u01B0\\u01A1ng Hi\\u1EC7u\",\n    onChange: handleBrandChange,\n    style: {\n      width: \"15%\",\n      marginLeft: \"10px\"\n    },\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, brands.map(brand => /*#__PURE__*/React.createElement(Option, {\n    key: brand._id,\n    value: brand._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, brand.brandName))), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Ch\\u1ECDn Ng\\u01B0\\u1EDDi b\\xE1n\",\n    onChange: handleUserChange,\n    style: {\n      width: \"25%\",\n      marginLeft: \"10px\"\n    },\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(Option, {\n    key: user._id,\n    value: user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, user.fullName, \" - \", user.email, \" - \", user.role))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => setIsCreateOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, \"Th\\xEAm M\\u1EDBi S\\u1EA3n Ph\\u1EA9m\")), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: products,\n    pagination: false,\n    rowKey: record => record._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    current: currentPage,\n    total: totalPages * limit,\n    pageSize: limit,\n    onChange: handlePageChange,\n    style: {\n      marginTop: \"20px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CreateProductModal, {\n    visible: isCreateOpen,\n    onCancel: () => setIsCreateOpen(false),\n    refreshProducts: fetchProducts,\n    categories: categories,\n    brands: brands,\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditProductModal, {\n    visible: isEditOpen,\n    productData: editProductData,\n    refreshProducts: fetchProducts,\n    onCancel: () => setIsEditOpen(false),\n    categories: categories,\n    brands: brands,\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProductImageModal, {\n    visible: isImageModalOpen,\n    onClose: () => setIsImageModalOpen(false),\n    productId: productId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["Table","Button","Popconfirm","Pagination","Input","message","Spin","Card","Select","Avatar","Modal","List","React","useEffect","useState","useCallback","getAllProducts","deleteProduct","getAllCategories","getAllBrands","debounce","formatCurrency","CreateProductModal","EditProductModal","ProductImageModal","getProductImages","getAllUsers","Option","ProductManagement","products","setProducts","categories","setCategories","brands","setBrands","users","setUsers","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","selectedUser","setSelectedUser","selectedBrand","setSelectedBrand","editProductData","setEditProductData","isCreateOpen","setIsCreateOpen","isEditOpen","setIsEditOpen","isImageModalOpen","setIsImageModalOpen","productId","setProductId","limit","fetchProducts","search","page","categoryId","brandId","sellerId","data","content","error","fetchCategoriesAndBrands","categoryData","brandData","userData","Promise","all","debouncedFetchProducts","value","handleCategoryChange","handleBrandChange","handleUserChange","confirmDeleteProduct","success","handlePageChange","handleEditClick","record","console","log","handleEditImages","columns","title","dataIndex","key","render","text","fullName","role","images","createElement","style","display","alignItems","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","image","_id","src","imageUrl","size","marginRight","length","align","justifyContent","type","onClick","marginLeft","onConfirm","okText","cancelText","marginBottom","placeholder","allowClear","onChange","e","target","width","category","categoryName","brand","brandName","user","email","textAlign","marginTop","Fragment","dataSource","pagination","rowKey","current","total","pageSize","visible","onCancel","refreshProducts","productData","onClose"],"sources":["D:/WebBanHang/ComputerShopAdmin/src/views/app-views/apps/product/index.js"],"sourcesContent":["import {\r\n  Table,\r\n  Button,\r\n  Popconfirm,\r\n  Pagination,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Card,\r\n  Select,\r\n  Avatar,\r\n  Modal,\r\n  List,\r\n} from \"antd\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { getAllProducts, deleteProduct } from \"services/productService\";\r\nimport { getAllCategories } from \"services/categoryService\";\r\nimport { getAllBrands } from \"services/brandService\";\r\nimport { debounce } from \"lodash\";\r\nimport { formatCurrency } from \"utils/formatCurrency\";\r\nimport CreateProductModal from \"./CreateProductModal\";\r\nimport EditProductModal from \"./EditProductModal\";\r\nimport ProductImageModal from \"./ProductImageModal\"; // Import modal\r\nimport { getProductImages } from \"services/productImageService\"; // Import service\r\nimport { getAllUsers } from \"services/userService\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function ProductManagement() {\r\n  const [products, setProducts] = useState([]); // State để lưu trữ sản phẩm\r\n  const [categories, setCategories] = useState([]); // State để lưu trữ danh mục cho bộ lọc\r\n  const [brands, setBrands] = useState([]); // State để lưu trữ thương hiệu cho bộ lọc\r\n  const [users, setUsers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1); // Trang hiện tại\r\n  const [totalPages, setTotalPages] = useState(1); // Tổng số trang\r\n  const [loading, setLoading] = useState(false); // Trạng thái loading\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Từ khóa tìm kiếm\r\n  const [selectedCategory, setSelectedCategory] = useState(null); // Danh mục đã chọn để lọc\r\n  const [selectedUser, setSelectedUser] = useState(null); // Danh mục đã chọn để lọc\r\n  const [selectedBrand, setSelectedBrand] = useState(null); // Thương hiệu đã chọn để lọc\r\n  const [editProductData, setEditProductData] = useState(null); // Dữ liệu để chỉnh sửa sản phẩm\r\n  const [isCreateOpen, setIsCreateOpen] = useState(false); // Trạng thái của modal tạo sản phẩm\r\n  const [isEditOpen, setIsEditOpen] = useState(false); // Trạng thái của modal chỉnh sửa sản phẩm\r\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false); // Trạng thái của modal hình ảnh\r\n  const [productId, setProductId] = useState(\"\");\r\n  const limit = 5; // Số lượng sản phẩm trên mỗi trang\r\n\r\n  // Hàm lấy sản phẩm\r\n  const fetchProducts = useCallback(\r\n    async (\r\n      search = searchTerm,\r\n      page = currentPage,\r\n      categoryId = selectedCategory,\r\n      brandId = selectedBrand,\r\n      sellerId = selectedUser\r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await getAllProducts(\r\n          search,\r\n          categoryId,\r\n          brandId,\r\n          sellerId,\r\n          page,\r\n          limit\r\n        ); // Gọi API để lấy sản phẩm\r\n        setProducts(data.content);\r\n        setTotalPages(data.totalPages);\r\n      } catch (error) {\r\n        message.error(\"Lỗi khi lấy sản phẩm.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [currentPage, limit, selectedCategory, selectedBrand]\r\n  );\r\n\r\n  // Hàm lấy danh mục và thương hiệu\r\n  const fetchCategoriesAndBrands = async () => {\r\n    const [categoryData, brandData, userData] = await Promise.all([\r\n      getAllCategories(),\r\n      getAllBrands(),\r\n      getAllUsers(1, 1000, \"\", \"SELLER,ADMIN\", true),\r\n    ]);\r\n    setCategories(categoryData.content);\r\n    setBrands(brandData.content);\r\n    setUsers(userData.content);\r\n  };\r\n\r\n  // Hàm debounce tìm kiếm\r\n  const debouncedFetchProducts = useCallback(\r\n    debounce((value) => {\r\n      setCurrentPage(1);\r\n      fetchProducts(value, 1);\r\n    }, 800),\r\n    [fetchProducts]\r\n  );\r\n\r\n  // Lấy sản phẩm khi trang hoặc từ khóa tìm kiếm thay đổi\r\n  useEffect(() => {\r\n    fetchProducts(searchTerm, currentPage);\r\n  }, [fetchProducts, currentPage]);\r\n\r\n  // Lấy danh mục và thương hiệu khi component mount\r\n  useEffect(() => {\r\n    fetchCategoriesAndBrands(); // Gọi để lấy danh mục và thương hiệu\r\n  }, []);\r\n\r\n  // Xử lý thay đổi danh mục\r\n  const handleCategoryChange = (value) => {\r\n    setSelectedCategory(value);\r\n    setCurrentPage(1);\r\n    fetchProducts(searchTerm, 1, value, selectedBrand, selectedUser);\r\n  };\r\n\r\n  // Xử lý thay đổi thương hiệu\r\n  const handleBrandChange = (value) => {\r\n    setSelectedBrand(value);\r\n    setCurrentPage(1);\r\n    fetchProducts(searchTerm, 1, selectedCategory, value, selectedUser);\r\n  };\r\n  const handleUserChange = (value) => {\r\n    setSelectedUser(value);\r\n    setCurrentPage(1);\r\n    fetchProducts(searchTerm, 1, selectedCategory, selectedBrand, value);\r\n  };\r\n  // Hàm xóa sản phẩm\r\n  const confirmDeleteProduct = async (productId) => {\r\n    try {\r\n      await deleteProduct(productId); // Gọi API để xóa sản phẩm\r\n      message.success(\"Đã xóa sản phẩm.\");\r\n      fetchProducts(); // Lấy lại sản phẩm sau khi xóa\r\n    } catch (error) {\r\n      message.error(\"Lỗi khi xóa sản phẩm.\");\r\n    }\r\n  };\r\n\r\n  // Xử lý thay đổi trang\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  // Xử lý khi click vào nút \"Sửa\"\r\n  const handleEditClick = (record) => {\r\n    console.log(record);\r\n    setEditProductData(record); // Lưu dữ liệu sản phẩm để chỉnh sửa\r\n    setIsEditOpen(true); // Mở modal chỉnh sửa\r\n  };\r\n\r\n  // Xử lý khi click vào nút \"Sửa Ảnh\"\r\n  // Xử lý khi click vào nút \"Sửa Ảnh\"\r\n  const handleEditImages = async (productId) => {\r\n    try {\r\n      setProductId(productId);\r\n      setIsImageModalOpen(true); // Mở modal hình ảnh\r\n    } catch (error) {\r\n      message.error(\"Lỗi khi lấy hình ảnh sản phẩm.\");\r\n    }\r\n  };\r\n\r\n  // Cấu hình các cột cho bảng Ant Design\r\n  const columns = [\r\n    {\r\n      title: \"Tên Sản Phẩm\",\r\n      dataIndex: \"productName\",\r\n      key: \"productName\",\r\n    },\r\n    {\r\n      title: \"Giá\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      render: (text) => `${formatCurrency(text)}`,\r\n    },\r\n    {\r\n      title: \"Danh Mục\",\r\n      dataIndex: [\"category\", \"categoryName\"],\r\n      key: \"categoryName\",\r\n    },\r\n    {\r\n      title: \"Thương Hiệu\",\r\n      dataIndex: [\"brand\", \"brandName\"],\r\n      key: \"brandName\",\r\n    },\r\n    {\r\n      title: \"Người bán | Người tạo\",\r\n      dataIndex: [\"sellerId\"],\r\n      key: \"sellerId\",\r\n      render: (sellerId) => sellerId ? `${sellerId.fullName} - ${sellerId.role}` : \"Không có\",\r\n    },\r\n    {\r\n      title: \"Hình Ảnh\",\r\n      dataIndex: \"images\",\r\n      key: \"images\",\r\n      render: (images) => (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {\" \"}\r\n          {/* Sử dụng flex để tạo hàng */}\r\n          {images.slice(0, 3).map((image) => (\r\n            <Avatar\r\n              key={image._id}\r\n              src={image.imageUrl}\r\n              size={40}\r\n              style={{ marginRight: 5 }} // Tạo khoảng cách giữa các hình ảnh\r\n            />\r\n          ))}\r\n          {images.length > 3 && <span>+{images.length - 3}</span>}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Số Lượng\",\r\n      dataIndex: \"stock\",\r\n      key: \"stock\",\r\n    },\r\n    {\r\n      title: \"Hành Động\",\r\n      key: \"actions\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => handleEditClick(record)}\r\n          >\r\n            Sửa\r\n          </Button>\r\n          <Button\r\n            type=\"default\"\r\n            size=\"small\"\r\n            onClick={() => handleEditImages(record._id)} // Sửa Ảnh\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Sửa Ảnh\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Bạn có chắc muốn xóa sản phẩm này?\"\r\n            onConfirm={() => confirmDeleteProduct(record._id)}\r\n            okText=\"Có\"\r\n            cancelText=\"Không\"\r\n          >\r\n            <Button size=\"small\" style={{ marginLeft: \"10px\" }}>\r\n              Xóa\r\n            </Button>\r\n          </Popconfirm>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <div>\r\n        {/* Ô tìm kiếm và các bộ lọc */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <Input\r\n            placeholder=\"Tìm kiếm sản phẩm...\"\r\n            allowClear\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value); // Cập nhật từ khóa tìm kiếm\r\n              debouncedFetchProducts(e.target.value); // Gọi hàm tìm kiếm\r\n            }}\r\n            style={{ width: \"25%\" }}\r\n          />\r\n          <Select\r\n            placeholder=\"Chọn Danh Mục\"\r\n            onChange={handleCategoryChange}\r\n            style={{ width: \"15%\", marginLeft: \"10px\" }}\r\n            allowClear\r\n          >\r\n            {categories.map((category) => (\r\n              <Option key={category._id} value={category._id}>\r\n                {category.categoryName}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          <Select\r\n            placeholder=\"Chọn Thương Hiệu\"\r\n            onChange={handleBrandChange}\r\n            style={{ width: \"15%\", marginLeft: \"10px\" }}\r\n            allowClear\r\n          >\r\n            {brands.map((brand) => (\r\n              <Option key={brand._id} value={brand._id}>\r\n                {brand.brandName}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          <Select\r\n            placeholder=\"Chọn Người bán\"\r\n            onChange={handleUserChange}\r\n            style={{ width: \"25%\", marginLeft: \"10px\" }}\r\n            allowClear\r\n          >\r\n            {users.map((user) => (\r\n              <Option key={user._id} value={user._id}>\r\n                {user.fullName} - {user.email} - {user.role}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          <Button type=\"primary\" onClick={() => setIsCreateOpen(true)}>\r\n            Thêm Mới Sản Phẩm\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Spinner loading */}\r\n        {loading ? (\r\n          <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Bảng sản phẩm */}\r\n            <Table\r\n              columns={columns}\r\n              dataSource={products}\r\n              pagination={false}\r\n              rowKey={(record) => record._id}\r\n            />\r\n\r\n            {/* Phân trang */}\r\n            <Pagination\r\n              current={currentPage}\r\n              total={totalPages * limit}\r\n              pageSize={limit}\r\n              onChange={handlePageChange}\r\n              style={{ marginTop: \"20px\", textAlign: \"center\" }}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <CreateProductModal\r\n        visible={isCreateOpen}\r\n        onCancel={() => setIsCreateOpen(false)}\r\n        refreshProducts={fetchProducts}\r\n        categories={categories}\r\n        brands={brands}\r\n        users={users}\r\n      />\r\n\r\n      {/* Modal chỉnh sửa sản phẩm */}\r\n      <EditProductModal\r\n        visible={isEditOpen}\r\n        productData={editProductData}\r\n        refreshProducts={fetchProducts}\r\n        onCancel={() => setIsEditOpen(false)}\r\n        categories={categories}\r\n        brands={brands}\r\n        users={users}\r\n      />\r\n\r\n      {/* Modal hiển thị hình ảnh sản phẩm */}\r\n      <ProductImageModal\r\n        visible={isImageModalOpen}\r\n        onClose={() => setIsImageModalOpen(false)}\r\n        productId={productId}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}