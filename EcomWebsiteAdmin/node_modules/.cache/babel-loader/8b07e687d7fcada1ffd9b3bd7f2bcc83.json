{"ast":null,"code":"import axios from \"axios\";\n\n// Lấy URL của Backend từ file .env\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// Hàm lấy token từ localStorage\nconst getToken = () => {\n  const token = localStorage.getItem(\"auth_token\");\n  return token ? token : null;\n};\n\n// Hàm lấy tất cả danh mục với phân trang, tìm kiếm và sắp xếp\nexport const getAllCategories = async (page = 1, limit = 1000, keyword = \"\") => {\n  try {\n    const response = await axios.get(`${API_URL}/categories`, {\n      params: {\n        keyword,\n        page,\n        limit\n      },\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data.payload;\n  } catch (error) {\n    console.error(\"Error fetching categories\", error);\n    throw error;\n  }\n};\n\n// Hàm lấy danh mục theo ID\nexport const getCategoryById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/categories/${id}`, {\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching category by ID\", error);\n    throw error;\n  }\n};\n\n// Hàm tạo danh mục mới\nexport const createCategory = async (categoryName, description, imageFile) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"categoryName\", categoryName);\n    formData.append(\"description\", description);\n    formData.append(\"image\", imageFile);\n    const response = await axios.post(`${API_URL}/categories`, formData, {\n      headers: {\n        Authorization: `Bearer ${getToken()}`,\n        // Thêm token vào header\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating category\", error);\n    throw error;\n  }\n};\n\n// Hàm cập nhật danh mục theo ID\nexport const updateCategory = async (id, categoryName, description, imageFile) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"categoryName\", categoryName);\n    formData.append(\"description\", description);\n    if (imageFile) {\n      formData.append(\"image\", imageFile);\n    }\n    const response = await axios.put(`${API_URL}/categories/${id}`, formData, {\n      headers: {\n        Authorization: `Bearer ${getToken()}`,\n        // Thêm token vào header\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating category\", error);\n    throw error;\n  }\n};\n\n// Hàm xóa danh mục theo ID\nexport const deleteCategory = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/categories/${id}`, {\n      headers: {\n        Authorization: `Bearer ${getToken()}` // Thêm token vào header\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting category\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getToken","token","localStorage","getItem","getAllCategories","page","limit","keyword","response","get","params","headers","Authorization","data","payload","error","console","getCategoryById","id","createCategory","categoryName","description","imageFile","formData","FormData","append","post","updateCategory","put","deleteCategory","delete"],"sources":["D:/EcomWebsiteProject/EcomWebsiteAdmin/src/services/categoryService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Lấy URL của Backend từ file .env\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Hàm lấy token từ localStorage\r\nconst getToken = () => {\r\n  const token = localStorage.getItem(\"auth_token\");\r\n  return token ? token : null;\r\n};\r\n\r\n// Hàm lấy tất cả danh mục với phân trang, tìm kiếm và sắp xếp\r\nexport const getAllCategories = async (page = 1, limit = 1000, keyword = \"\") => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/categories`, {\r\n      params: {\r\n        keyword,\r\n        page,\r\n        limit,\r\n      },\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n      },\r\n    });\r\n    return response.data.payload;\r\n  } catch (error) {\r\n    console.error(\"Error fetching categories\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm lấy danh mục theo ID\r\nexport const getCategoryById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/categories/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching category by ID\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm tạo danh mục mới\r\nexport const createCategory = async (categoryName, description, imageFile) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"categoryName\", categoryName);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"image\", imageFile);\r\n\r\n    const response = await axios.post(`${API_URL}/categories`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating category\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm cập nhật danh mục theo ID\r\nexport const updateCategory = async (\r\n  id,\r\n  categoryName,\r\n  description,\r\n  imageFile\r\n) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"categoryName\", categoryName);\r\n    formData.append(\"description\", description);\r\n    if (imageFile) {\r\n      formData.append(\"image\", imageFile);\r\n    }\r\n\r\n    const response = await axios.put(`${API_URL}/categories/${id}`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating category\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm xóa danh mục theo ID\r\nexport const deleteCategory = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/categories/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${getToken()}`, // Thêm token vào header\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting category\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}