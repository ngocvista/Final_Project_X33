{"ast":null,"code":"var _jsxFileName = \"D:\\\\EcomWebsiteProject\\\\EcomWebsiteAdmin\\\\src\\\\views\\\\app-views\\\\apps\\\\chat\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport InnerAppLayout from \"layouts/inner-app-layout\";\nimport ChatContent from \"./ChatContent\";\nimport ChatMenu from \"./ChatMenu\";\nimport { getAllChatRoomsForAdmin } from \"services/chatRoomService\"; // Import service để gọi API\n\nconst Chat = props => {\n  const [chatRooms, setChatRooms] = useState([]);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    // Gọi API để lấy danh sách chat room\n    const fetchChatRooms = async () => {\n      try {\n        const rooms = await getAllChatRoomsForAdmin(user.userId);\n        setChatRooms(rooms); // Lưu danh sách chat rooms vào state\n      } catch (error) {\n        console.error(\"Error fetching chat rooms\", error);\n      }\n    };\n    fetchChatRooms();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InnerAppLayout, {\n    sideContent: /*#__PURE__*/React.createElement(ChatMenu, Object.assign({\n      chatRooms: chatRooms\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }\n    })) // Truyền chatRooms qua props\n    ,\n    mainContent: /*#__PURE__*/React.createElement(ChatContent, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }\n    })),\n    sideContentWidth: 450,\n    sideContentGutter: false,\n    border: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","InnerAppLayout","ChatContent","ChatMenu","getAllChatRoomsForAdmin","Chat","props","chatRooms","setChatRooms","user","JSON","parse","localStorage","getItem","fetchChatRooms","rooms","userId","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sideContent","Object","assign","mainContent","sideContentWidth","sideContentGutter","border"],"sources":["D:/EcomWebsiteProject/EcomWebsiteAdmin/src/views/app-views/apps/chat/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport InnerAppLayout from \"layouts/inner-app-layout\";\r\nimport ChatContent from \"./ChatContent\";\r\nimport ChatMenu from \"./ChatMenu\";\r\nimport { getAllChatRoomsForAdmin } from \"services/chatRoomService\"; // Import service để gọi API\r\n\r\nconst Chat = (props) => {\r\n  const [chatRooms, setChatRooms] = useState([]);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  useEffect(() => {\r\n    // Gọi API để lấy danh sách chat room\r\n    const fetchChatRooms = async () => {\r\n      try {\r\n        const rooms = await getAllChatRoomsForAdmin(user.userId);\r\n        setChatRooms(rooms); // Lưu danh sách chat rooms vào state\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat rooms\", error);\r\n      }\r\n    };\r\n\r\n    fetchChatRooms();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <InnerAppLayout\r\n        sideContent={<ChatMenu chatRooms={chatRooms} {...props} />} // Truyền chatRooms qua props\r\n        mainContent={<ChatContent {...props} />}\r\n        sideContentWidth={450}\r\n        sideContentGutter={false}\r\n        border\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,uBAAuB,QAAQ,0BAA0B,CAAC,CAAC;;AAEpE,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMU,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErDb,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMX,uBAAuB,CAACK,IAAI,CAACO,MAAM,CAAC;QACxDR,YAAY,CAACO,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDH,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnB5B,KAAA,CAAAqB,aAAA,CAAClB,cAAc;IACb0B,WAAW,eAAE7B,KAAA,CAAAqB,aAAA,CAAChB,QAAQ,EAAAyB,MAAA,CAAAC,MAAA;MAACtB,SAAS,EAAEA;IAAU,GAAKD,KAAK;MAAAe,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAAE,CAAC;IAAA;IAC5DI,WAAW,eAAEhC,KAAA,CAAAqB,aAAA,CAACjB,WAAW,EAAA0B,MAAA,CAAAC,MAAA,KAAKvB,KAAK;MAAAe,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAAE;IACxCK,gBAAgB,EAAE,GAAI;IACtBC,iBAAiB,EAAE,KAAM;IACzBC,MAAM;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACP,CACE,CAAC;AAEV,CAAC;AAED,eAAerB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}