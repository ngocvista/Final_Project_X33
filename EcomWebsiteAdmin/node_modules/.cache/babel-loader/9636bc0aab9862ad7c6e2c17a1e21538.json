{"ast":null,"code":"// src/hooks/useAuthCheck.js\nimport { message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nconst useAuthCheck = () => {\n  const [hasNotified, setHasNotified] = useState(false); // Biến trạng thái để theo dõi việc đã thông báo hay chưa\n\n  useEffect(() => {\n    const checkTokenExpiration = () => {\n      const expiration = localStorage.getItem(\"token_expiration\");\n      const currentTime = Date.now();\n      if (expiration && currentTime >= expiration && !hasNotified) {\n        // Token đã hết hạn và chưa thông báo\n        localStorage.removeItem(\"auth_token\");\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"token_expiration\");\n        message.warning(\"Phiên đăng nhập đã hết hạn vui lòng đăng nhập lại!\");\n        setHasNotified(true); // Đánh dấu là đã thông báo\n      }\n    };\n\n    // Kiểm tra ngay khi component mount\n    checkTokenExpiration();\n\n    // Kiểm tra sau mỗi 1 phút\n    const interval = setInterval(checkTokenExpiration, 60 * 1000);\n\n    // Dọn dẹp interval khi component unmount\n    return () => clearInterval(interval);\n  }, [hasNotified]); // Thêm hasNotified vào dependency array\n};\nexport default useAuthCheck;","map":{"version":3,"names":["message","useEffect","useState","useAuthCheck","hasNotified","setHasNotified","checkTokenExpiration","expiration","localStorage","getItem","currentTime","Date","now","removeItem","warning","interval","setInterval","clearInterval"],"sources":["D:/job/ComputerShopNode-Plus/ComputerShopAdmin/src/hook/useAuthCheck.js"],"sourcesContent":["// src/hooks/useAuthCheck.js\r\nimport { message } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useAuthCheck = () => {\r\n  const [hasNotified, setHasNotified] = useState(false); // Biến trạng thái để theo dõi việc đã thông báo hay chưa\r\n\r\n  useEffect(() => {\r\n    const checkTokenExpiration = () => {\r\n      const expiration = localStorage.getItem(\"token_expiration\");\r\n      const currentTime = Date.now();\r\n\r\n      if (expiration && currentTime >= expiration && !hasNotified) {\r\n        // Token đã hết hạn và chưa thông báo\r\n        localStorage.removeItem(\"auth_token\");\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"token_expiration\");\r\n        message.warning(\"Phiên đăng nhập đã hết hạn vui lòng đăng nhập lại!\");\r\n        setHasNotified(true); // Đánh dấu là đã thông báo\r\n      }\r\n    };\r\n\r\n    // Kiểm tra ngay khi component mount\r\n    checkTokenExpiration();\r\n\r\n    // Kiểm tra sau mỗi 1 phút\r\n    const interval = setInterval(checkTokenExpiration, 60 * 1000);\r\n\r\n    // Dọn dẹp interval khi component unmount\r\n    return () => clearInterval(interval);\r\n  }, [hasNotified]); // Thêm hasNotified vào dependency array\r\n};\r\n\r\nexport default useAuthCheck;\r\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMK,oBAAoB,GAAGA,CAAA,KAAM;MACjC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;MAC3D,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAE9B,IAAIL,UAAU,IAAIG,WAAW,IAAIH,UAAU,IAAI,CAACH,WAAW,EAAE;QAC3D;QACAI,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;QACrCL,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;QAC/BL,YAAY,CAACK,UAAU,CAAC,kBAAkB,CAAC;QAC3Cb,OAAO,CAACc,OAAO,CAAC,oDAAoD,CAAC;QACrET,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACxB;IACF,CAAC;;IAED;IACAC,oBAAoB,CAAC,CAAC;;IAEtB;IACA,MAAMS,QAAQ,GAAGC,WAAW,CAACV,oBAAoB,EAAE,EAAE,GAAG,IAAI,CAAC;;IAE7D;IACA,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,eAAeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}