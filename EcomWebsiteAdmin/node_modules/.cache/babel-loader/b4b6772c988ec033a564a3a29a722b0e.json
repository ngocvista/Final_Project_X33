{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebBanHang\\\\EcomWebsiteAdmin\\\\src\\\\views\\\\app-views\\\\apps\\\\product-saler\\\\index.js\";\nimport { Table, Button, Popconfirm, Pagination, Input, message, Spin, Card, Select, Avatar, Modal, List } from \"antd\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { getAllProducts, deleteProduct } from \"services/productService\";\nimport { getAllCategories } from \"services/categoryService\";\nimport { getAllBrands } from \"services/brandService\";\nimport { debounce } from \"lodash\";\nimport { formatCurrency } from \"utils/formatCurrency\";\nimport CreateProductModal from \"./CreateProductModalSaler\";\nimport EditProductModal from \"./EditProductModalSaler\";\nimport ProductImageModal from \"./ProductImageModal\"; // Import modal\nimport { getAllSaler } from \"services/userService\";\nconst {\n  Option\n} = Select;\nexport default function ProductManagement() {\n  const [products, setProducts] = useState([]); // State để lưu trữ sản phẩm\n  const [categories, setCategories] = useState([]); // State để lưu trữ danh mục cho bộ lọc\n  const [brands, setBrands] = useState([]); // State để lưu trữ thương hiệu cho bộ lọc\n  const [users, setUsers] = useState([]); // State để lưu trữ thương hiệu cho bộ lọc\n  const [currentPage, setCurrentPage] = useState(1); // Trang hiện tại\n  const [totalPages, setTotalPages] = useState(1); // Tổng số trang\n  const [loading, setLoading] = useState(false); // Trạng thái loading\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Từ khóa tìm kiếm\n  const [selectedCategory, setSelectedCategory] = useState(null); // Danh mục đã chọn để lọc\n  const [selectedBrand, setSelectedBrand] = useState(null); // Thương hiệu đã chọn để lọc\n  const [editProductData, setEditProductData] = useState(null); // Dữ liệu để chỉnh sửa sản phẩm\n  const [isCreateOpen, setIsCreateOpen] = useState(false); // Trạng thái của modal tạo sản phẩm\n  const [isEditOpen, setIsEditOpen] = useState(false); // Trạng thái của modal chỉnh sửa sản phẩm\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false); // Trạng thái của modal hình ảnh\n  const [productId, setProductId] = useState(\"\");\n  const limit = 5; // Số lượng sản phẩm trên mỗi trang\n\n  // Hàm lấy sản phẩm\n  const fetchProducts = useCallback(async (search = searchTerm, page = currentPage, categoryId = selectedCategory, brandId = selectedBrand) => {\n    setLoading(true);\n    try {\n      const salerId = JSON.parse(localStorage.getItem(\"user\")).userId;\n      const data = await getAllProducts(search, categoryId, brandId, salerId, page, limit); // Gọi API để lấy sản phẩm\n      setProducts(data.content);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      message.error(\"Lỗi khi lấy sản phẩm.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [currentPage, limit, selectedCategory, selectedBrand]);\n\n  // Hàm lấy danh mục và thương hiệu\n  const fetchCategoriesAndBrands = async () => {\n    const [categoryData, brandData, userData] = await Promise.all([getAllCategories(), getAllBrands()]);\n    setCategories(categoryData.content);\n    setBrands(brandData.content);\n  };\n\n  // Hàm debounce tìm kiếm\n  const debouncedFetchProducts = useCallback(debounce(value => {\n    setCurrentPage(1);\n    fetchProducts(value, 1);\n  }, 800), [fetchProducts]);\n\n  // Lấy sản phẩm khi trang hoặc từ khóa tìm kiếm thay đổi\n  useEffect(() => {\n    fetchProducts(searchTerm, currentPage);\n  }, [fetchProducts, currentPage]);\n\n  // Lấy danh mục và thương hiệu khi component mount\n  useEffect(() => {\n    fetchCategoriesAndBrands(); // Gọi để lấy danh mục và thương hiệu\n  }, []);\n\n  // Xử lý thay đổi danh mục\n  const handleCategoryChange = value => {\n    setSelectedCategory(value);\n    setCurrentPage(1);\n    fetchProducts(searchTerm, 1, value, selectedBrand);\n  };\n\n  // Xử lý thay đổi thương hiệu\n  const handleBrandChange = value => {\n    setSelectedBrand(value);\n    setCurrentPage(1);\n    fetchProducts(searchTerm, 1, selectedCategory, value);\n  };\n\n  // Hàm xóa sản phẩm\n  const confirmDeleteProduct = async productId => {\n    try {\n      await deleteProduct(productId); // Gọi API để xóa sản phẩm\n      message.success(\"Đã xóa sản phẩm.\");\n      fetchProducts(); // Lấy lại sản phẩm sau khi xóa\n    } catch (error) {\n      message.error(\"Lỗi khi xóa sản phẩm.\");\n    }\n  };\n\n  // Xử lý thay đổi trang\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  // Xử lý khi click vào nút \"Sửa\"\n  const handleEditClick = record => {\n    setEditProductData(record); // Lưu dữ liệu sản phẩm để chỉnh sửa\n    setIsEditOpen(true); // Mở modal chỉnh sửa\n  };\n\n  // Xử lý khi click vào nút \"Sửa Ảnh\"\n  const handleEditImages = async productId => {\n    try {\n      setProductId(productId);\n      setIsImageModalOpen(true); // Mở modal hình ảnh\n    } catch (error) {\n      message.error(\"Lỗi khi lấy hình ảnh sản phẩm.\");\n    }\n  };\n\n  // Cấu hình các cột cho bảng Ant Design\n  const columns = [{\n    title: \"Tên Sản Phẩm\",\n    dataIndex: \"productName\",\n    key: \"productName\"\n  }, {\n    title: \"Giá\",\n    dataIndex: \"price\",\n    key: \"price\",\n    render: text => `${formatCurrency(text)}` // Định dạng giá\n  }, {\n    title: \"Danh Mục\",\n    dataIndex: [\"category\", \"categoryName\"],\n    key: \"categoryName\"\n  }, {\n    title: \"Thương Hiệu\",\n    dataIndex: [\"brand\", \"brandName\"],\n    key: \"brandName\"\n  }, {\n    title: \"Hình Ảnh\",\n    dataIndex: \"images\",\n    key: \"images\",\n    render: images => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, \" \", images.slice(0, 3).map(image => /*#__PURE__*/React.createElement(Avatar, {\n      key: image.imageId,\n      src: image.imageUrl,\n      size: 40,\n      style: {\n        marginRight: 5\n      } // Tạo khoảng cách giữa các hình ảnh\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    })), images.length > 3 && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, \"+\", images.length - 3))\n  }, {\n    title: \"Số Lượng\",\n    dataIndex: \"stock\",\n    key: \"stock\"\n  }, {\n    title: \"Hành Động\",\n    key: \"actions\",\n    align: \"center\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: () => handleEditClick(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, \"S\\u1EEDa\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"default\",\n      size: \"small\",\n      onClick: () => handleEditImages(record._id) // Sửa Ảnh\n      ,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, \"S\\u1EEDa \\u1EA2nh\"), /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a s\\u1EA3n ph\\u1EA9m n\\xE0y?\",\n      onConfirm: () => confirmDeleteProduct(record._id),\n      okText: \"C\\xF3\",\n      cancelText: \"Kh\\xF4ng\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, \"X\\xF3a\")))\n  }];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"T\\xECm ki\\u1EBFm s\\u1EA3n ph\\u1EA9m...\",\n    allowClear: true,\n    value: searchTerm,\n    onChange: e => {\n      setSearchTerm(e.target.value); // Cập nhật từ khóa tìm kiếm\n      debouncedFetchProducts(e.target.value); // Gọi hàm tìm kiếm\n    },\n    style: {\n      width: \"40%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Ch\\u1ECDn Danh M\\u1EE5c\",\n    onChange: handleCategoryChange,\n    style: {\n      width: \"20%\",\n      marginLeft: \"10px\"\n    },\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(Option, {\n    key: category._id,\n    value: category._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, category.categoryName))), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Ch\\u1ECDn Th\\u01B0\\u01A1ng Hi\\u1EC7u\",\n    onChange: handleBrandChange,\n    style: {\n      width: \"20%\",\n      marginLeft: \"10px\"\n    },\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, brands.map(brand => /*#__PURE__*/React.createElement(Option, {\n    key: brand._id,\n    value: brand._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, brand.brandName))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => setIsCreateOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, \"Th\\xEAm M\\u1EDBi S\\u1EA3n Ph\\u1EA9m\")), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: products,\n    pagination: false,\n    rowKey: record => record.productId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    current: currentPage,\n    total: totalPages * limit,\n    pageSize: limit,\n    onChange: handlePageChange,\n    style: {\n      marginTop: \"20px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CreateProductModal, {\n    visible: isCreateOpen,\n    onCancel: () => setIsCreateOpen(false),\n    refreshProducts: fetchProducts,\n    categories: categories,\n    brands: brands,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditProductModal, {\n    visible: isEditOpen,\n    productData: editProductData,\n    refreshProducts: fetchProducts,\n    onCancel: () => setIsEditOpen(false),\n    categories: categories,\n    brands: brands,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProductImageModal, {\n    visible: isImageModalOpen,\n    onClose: () => setIsImageModalOpen(false),\n    productId: productId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["Table","Button","Popconfirm","Pagination","Input","message","Spin","Card","Select","Avatar","Modal","List","React","useEffect","useState","useCallback","getAllProducts","deleteProduct","getAllCategories","getAllBrands","debounce","formatCurrency","CreateProductModal","EditProductModal","ProductImageModal","getAllSaler","Option","ProductManagement","products","setProducts","categories","setCategories","brands","setBrands","users","setUsers","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","selectedBrand","setSelectedBrand","editProductData","setEditProductData","isCreateOpen","setIsCreateOpen","isEditOpen","setIsEditOpen","isImageModalOpen","setIsImageModalOpen","productId","setProductId","limit","fetchProducts","search","page","categoryId","brandId","salerId","JSON","parse","localStorage","getItem","userId","data","content","error","fetchCategoriesAndBrands","categoryData","brandData","userData","Promise","all","debouncedFetchProducts","value","handleCategoryChange","handleBrandChange","confirmDeleteProduct","success","handlePageChange","handleEditClick","record","handleEditImages","columns","title","dataIndex","key","render","text","images","createElement","style","display","alignItems","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","image","imageId","src","imageUrl","size","marginRight","length","align","justifyContent","type","onClick","_id","marginLeft","onConfirm","okText","cancelText","marginBottom","placeholder","allowClear","onChange","e","target","width","category","categoryName","brand","brandName","textAlign","marginTop","Fragment","dataSource","pagination","rowKey","current","total","pageSize","visible","onCancel","refreshProducts","productData","onClose"],"sources":["D:/WebBanHang/EcomWebsiteAdmin/src/views/app-views/apps/product-saler/index.js"],"sourcesContent":["import {\r\n  Table,\r\n  Button,\r\n  Popconfirm,\r\n  Pagination,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Card,\r\n  Select,\r\n  Avatar,\r\n  Modal,\r\n  List,\r\n} from \"antd\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  getAllProducts,\r\n  deleteProduct,\r\n} from \"services/productService\";\r\nimport { getAllCategories } from \"services/categoryService\";\r\nimport { getAllBrands } from \"services/brandService\";\r\nimport { debounce } from \"lodash\";\r\nimport { formatCurrency } from \"utils/formatCurrency\";\r\nimport CreateProductModal from \"./CreateProductModalSaler\";\r\nimport EditProductModal from \"./EditProductModalSaler\";\r\nimport ProductImageModal from \"./ProductImageModal\"; // Import modal\r\nimport { getAllSaler } from \"services/userService\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function ProductManagement() {\r\n  const [products, setProducts] = useState([]); // State để lưu trữ sản phẩm\r\n  const [categories, setCategories] = useState([]); // State để lưu trữ danh mục cho bộ lọc\r\n  const [brands, setBrands] = useState([]); // State để lưu trữ thương hiệu cho bộ lọc\r\n  const [users, setUsers] = useState([]); // State để lưu trữ thương hiệu cho bộ lọc\r\n  const [currentPage, setCurrentPage] = useState(1); // Trang hiện tại\r\n  const [totalPages, setTotalPages] = useState(1); // Tổng số trang\r\n  const [loading, setLoading] = useState(false); // Trạng thái loading\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Từ khóa tìm kiếm\r\n  const [selectedCategory, setSelectedCategory] = useState(null); // Danh mục đã chọn để lọc\r\n  const [selectedBrand, setSelectedBrand] = useState(null); // Thương hiệu đã chọn để lọc\r\n  const [editProductData, setEditProductData] = useState(null); // Dữ liệu để chỉnh sửa sản phẩm\r\n  const [isCreateOpen, setIsCreateOpen] = useState(false); // Trạng thái của modal tạo sản phẩm\r\n  const [isEditOpen, setIsEditOpen] = useState(false); // Trạng thái của modal chỉnh sửa sản phẩm\r\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false); // Trạng thái của modal hình ảnh\r\n  const [productId, setProductId] = useState(\"\");\r\n  const limit = 5; // Số lượng sản phẩm trên mỗi trang\r\n\r\n  // Hàm lấy sản phẩm\r\n  const fetchProducts = useCallback(\r\n    async (\r\n      search = searchTerm,\r\n      page = currentPage,\r\n      categoryId = selectedCategory,\r\n      brandId = selectedBrand\r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const salerId = JSON.parse(localStorage.getItem(\"user\")).userId;\r\n        const data = await getAllProducts(\r\n          search,\r\n          categoryId,\r\n          brandId,\r\n          salerId,\r\n          page,\r\n          limit,\r\n        ); // Gọi API để lấy sản phẩm\r\n        setProducts(data.content);\r\n        setTotalPages(data.totalPages);\r\n      } catch (error) {\r\n        message.error(\"Lỗi khi lấy sản phẩm.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [currentPage, limit, selectedCategory, selectedBrand]\r\n  );\r\n\r\n  // Hàm lấy danh mục và thương hiệu\r\n  const fetchCategoriesAndBrands = async () => {\r\n    const [categoryData, brandData, userData] = await Promise.all([\r\n      getAllCategories(),\r\n      getAllBrands(),\r\n    ]);\r\n    setCategories(categoryData.content);\r\n    setBrands(brandData.content);\r\n  };\r\n\r\n  // Hàm debounce tìm kiếm\r\n  const debouncedFetchProducts = useCallback(\r\n    debounce((value) => {\r\n      setCurrentPage(1);\r\n      fetchProducts(value, 1);\r\n    }, 800),\r\n    [fetchProducts]\r\n  );\r\n\r\n  // Lấy sản phẩm khi trang hoặc từ khóa tìm kiếm thay đổi\r\n  useEffect(() => {\r\n    fetchProducts(searchTerm, currentPage);\r\n  }, [fetchProducts, currentPage]);\r\n\r\n  // Lấy danh mục và thương hiệu khi component mount\r\n  useEffect(() => {\r\n    fetchCategoriesAndBrands(); // Gọi để lấy danh mục và thương hiệu\r\n  }, []);\r\n\r\n  // Xử lý thay đổi danh mục\r\n  const handleCategoryChange = (value) => {\r\n    setSelectedCategory(value);\r\n    setCurrentPage(1);\r\n    fetchProducts(searchTerm, 1, value, selectedBrand);\r\n  };\r\n\r\n  // Xử lý thay đổi thương hiệu\r\n  const handleBrandChange = (value) => {\r\n    setSelectedBrand(value);\r\n    setCurrentPage(1);\r\n    fetchProducts(searchTerm, 1, selectedCategory, value);\r\n  };\r\n\r\n  // Hàm xóa sản phẩm\r\n  const confirmDeleteProduct = async (productId) => {\r\n    try {\r\n      await deleteProduct(productId); // Gọi API để xóa sản phẩm\r\n      message.success(\"Đã xóa sản phẩm.\");\r\n      fetchProducts(); // Lấy lại sản phẩm sau khi xóa\r\n    } catch (error) {\r\n      message.error(\"Lỗi khi xóa sản phẩm.\");\r\n    }\r\n  };\r\n\r\n  // Xử lý thay đổi trang\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  // Xử lý khi click vào nút \"Sửa\"\r\n  const handleEditClick = (record) => {\r\n    setEditProductData(record); // Lưu dữ liệu sản phẩm để chỉnh sửa\r\n    setIsEditOpen(true); // Mở modal chỉnh sửa\r\n  };\r\n\r\n  // Xử lý khi click vào nút \"Sửa Ảnh\"\r\n  const handleEditImages = async (productId) => {\r\n    try {\r\n      setProductId(productId);\r\n      setIsImageModalOpen(true); // Mở modal hình ảnh\r\n    } catch (error) {\r\n      message.error(\"Lỗi khi lấy hình ảnh sản phẩm.\");\r\n    }\r\n  };\r\n\r\n  // Cấu hình các cột cho bảng Ant Design\r\n  const columns = [\r\n    {\r\n      title: \"Tên Sản Phẩm\",\r\n      dataIndex: \"productName\",\r\n      key: \"productName\",\r\n    },\r\n    {\r\n      title: \"Giá\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      render: (text) => `${formatCurrency(text)}`, // Định dạng giá\r\n    },\r\n    {\r\n      title: \"Danh Mục\",\r\n      dataIndex: [\"category\", \"categoryName\"],\r\n      key: \"categoryName\",\r\n    },\r\n    {\r\n      title: \"Thương Hiệu\",\r\n      dataIndex: [\"brand\", \"brandName\"],\r\n      key: \"brandName\",\r\n    },\r\n    {\r\n      title: \"Hình Ảnh\",\r\n      dataIndex: \"images\",\r\n      key: \"images\",\r\n      render: (images) => (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {\" \"}\r\n          {/* Sử dụng flex để tạo hàng */}\r\n          {images.slice(0, 3).map((image) => (\r\n            <Avatar\r\n              key={image.imageId}\r\n              src={image.imageUrl}\r\n              size={40}\r\n              style={{ marginRight: 5 }} // Tạo khoảng cách giữa các hình ảnh\r\n            />\r\n          ))}\r\n          {images.length > 3 && <span>+{images.length - 3}</span>}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Số Lượng\",\r\n      dataIndex: \"stock\",\r\n      key: \"stock\",\r\n    },\r\n    {\r\n      title: \"Hành Động\",\r\n      key: \"actions\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => handleEditClick(record)}\r\n          >\r\n            Sửa\r\n          </Button>\r\n          <Button\r\n            type=\"default\"\r\n            size=\"small\"\r\n            onClick={() => handleEditImages(record._id)} // Sửa Ảnh\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Sửa Ảnh\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Bạn có chắc muốn xóa sản phẩm này?\"\r\n            onConfirm={() => confirmDeleteProduct(record._id)}\r\n            okText=\"Có\"\r\n            cancelText=\"Không\"\r\n          >\r\n            <Button size=\"small\" style={{ marginLeft: \"10px\" }}>\r\n              Xóa\r\n            </Button>\r\n          </Popconfirm>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <div>\r\n        {/* Ô tìm kiếm và các bộ lọc */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <Input\r\n            placeholder=\"Tìm kiếm sản phẩm...\"\r\n            allowClear\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value); // Cập nhật từ khóa tìm kiếm\r\n              debouncedFetchProducts(e.target.value); // Gọi hàm tìm kiếm\r\n            }}\r\n            style={{ width: \"40%\" }}\r\n          />\r\n          <Select\r\n            placeholder=\"Chọn Danh Mục\"\r\n            onChange={handleCategoryChange}\r\n            style={{ width: \"20%\", marginLeft: \"10px\" }}\r\n            allowClear\r\n          >\r\n            {categories.map((category) => (\r\n              <Option key={category._id} value={category._id}>\r\n                {category.categoryName}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          <Select\r\n            placeholder=\"Chọn Thương Hiệu\"\r\n            onChange={handleBrandChange}\r\n            style={{ width: \"20%\", marginLeft: \"10px\" }}\r\n            allowClear\r\n          >\r\n            {brands.map((brand) => (\r\n              <Option key={brand._id} value={brand._id}>\r\n                {brand.brandName}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          <Button type=\"primary\" onClick={() => setIsCreateOpen(true)}>\r\n            Thêm Mới Sản Phẩm\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Spinner loading */}\r\n        {loading ? (\r\n          <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Bảng sản phẩm */}\r\n            <Table\r\n              columns={columns}\r\n              dataSource={products}\r\n              pagination={false}\r\n              rowKey={(record) => record.productId}\r\n            />\r\n\r\n            {/* Phân trang */}\r\n            <Pagination\r\n              current={currentPage}\r\n              total={totalPages * limit}\r\n              pageSize={limit}\r\n              onChange={handlePageChange}\r\n              style={{ marginTop: \"20px\", textAlign: \"center\" }}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <CreateProductModal\r\n        visible={isCreateOpen}\r\n        onCancel={() => setIsCreateOpen(false)}\r\n        refreshProducts={fetchProducts}\r\n        categories={categories}\r\n        brands={brands}\r\n      />\r\n\r\n      {/* Modal chỉnh sửa sản phẩm */}\r\n      <EditProductModal\r\n        visible={isEditOpen}\r\n        productData={editProductData}\r\n        refreshProducts={fetchProducts}\r\n        onCancel={() => setIsEditOpen(false)}\r\n        categories={categories}\r\n        brands={brands}\r\n      />\r\n\r\n      {/* Modal hiển thị hình ảnh sản phẩm */}\r\n      <ProductImageModal\r\n        visible={isImageModalOpen}\r\n        onClose={() => setIsImageModalOpen(false)}\r\n        productId={productId}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}